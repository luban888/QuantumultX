
[general]

;Quantumult X 会对 server_check_url 指定的网址进行相应测试，以确认节点的可用性
;你同样可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数
;如您为节点单独指定了 url，则所有相关延迟测试中，均会采用此 url 地址
server_check_url= http://www.qualcomm.cn/generate_204
;节点延迟测试超时参数，需小于 5000 毫秒才生效
server_check_timeout=3000

;资源解析器
resource_parser_url= https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js


;👍👍geo_location_checker用于节点页面的节点信息展示，可完整自定义展示内容与方式
; extreme-ip-lookup为Quantumult X 作者提供的示范 api
;geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js
;下面是我所使用的 api 及获取、展示节点信息的 js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js


;👍👍👍运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式。
;running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。

;running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy
; 上述写法，前两个 filter 先后表示 在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 切换为全局代理[all_proxy]
; 如需使用，相应 SSID 换成你自己 Wi-Fi 名即可

;ssid_suspended_list，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个Wi-Fi用“,”连接
;ssid_suspended_list=Asus, Shawn-Wifi

;dns exclusion list中的域名将不使用fake-ip方式. 其它域名则全部采用 fake-ip 及远程解析的模式
;dns_exclusion_list=*.qq.com

;UDP 白名单，留空则默认所有为端口。不在udp白名单列表中的端口，将被丢弃处理（返回 ICMP  “端口不可达” 信息）。
;udp_whitelist=53, 80-427, 444-65535

; UDP Drop名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息
; drop 名单仅处理 whitelist名单中的端口
;udp_drop_list = 1900, 80

# 参数 fallback_udp_policy 仅支持 v1.0.19 以及之后的版本。
# 参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。
fallback_udp_policy=direct

;下列表中的内容将不经过 QuantumultX的处理，设置后建议重启设备
;excluded_routes= 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
;icmp_auto_reply=true

;指定 DoH  请求所使用的 User-Agent
;doh_user_agent=Agent/1.0

;指定服务器测试时所使用的 User-Agent
;server_check_user_agent = Agent/1.0

// 默认当 DNS 层面某domain 被reject时，将返回loopback IP。你可以通过下面的参数
// 修改成为 “no-error-no-answer”，或者 “nxdomain”
;dns_reject_domain_behavior = loopback



[dns]
; 禁用系统 DNS（no-system） 以及 ipv6
;no-system
;no-ipv6
;支持参数 excluded_ssids , included_ssids(1.0.29+) 指定在特定 Wi-Fi下失效/生效

// circumvent-ipv4-answer, circumvent-ipv6-answer 参数
//1、当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
//2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
//3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
;circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
;circumvent-ipv6-answer = ::

//如需使用 DoH3 DNS over HTTP/3 请开启下面👇参数
;prefer-doh3

;指定 dns 服务器，并发响应选取最优结果
server=119.29.29.29
server=119.28.28.28
server=114.114.114.114
server=202.141.176.93
server=202.141.178.13
server=117.50.10.10
server=223.5.5.5

;如指定 doh 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持多个 doh 并发，👇
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持 alias 映射类型
;alias=/example.com/another-example.com


;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2


;指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
server=/*.taobao.com/223.5.5.5
server=/*.tmall.com/223.5.5.5
server=/*.alipay.com/223.5.5.5
server=/*.aliyun.com/223.5.5.5
server=/*.jd.com/119.28.28.28
server=/*.qq.com/119.28.28.28
server=/*.tencent.com/119.28.28.28
server=/*.weixin.com/119.28.28.28
server=/*.bilibili.com/119.29.29.29
server=/*.netease.com/119.29.29.29
server=/*testflight.apple.com/23.76.66.98

//映射域名到其它域名的类型
;alias = /example7.com/another-example.com


[task_local]
;包含3⃣️种类型: cron 定时任务，UI交互脚本，网络切换脚本

; 1⃣️ 任务模块，可用于签到,天气话费查询等
;js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
;从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
;比如上述语句 代表每天 12 点 2 分，自动执行一次;
;tag参数为 task 命名标识;
;img-url参数用于指定 task 的图标(108*108)

2 12 * * * sample.js, tag=本地示范(左滑编辑，右滑执行), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
13 12 * * * https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag=远程示范(点击缓存/更新脚本), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png

# 2⃣️ UI交互查询脚本示范，在首页长按 节点/策略组 唤出
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询, img-url=checkmark.seal.system, enabled=true

# 3⃣️ 网络切换/变化时 触发的脚本类型
;event-network sample-taks.js


#以下为策略组[policy]部分
# static 策略组中，你需要手动选择想要的节点/策略组。
# available 策略组将按顺序选择你列表中第一个可用的节点。
# round-robin 策略组，将按列表的顺序轮流使用其中的节点。
# url-latency-benchmark 延迟策略组，选取延迟最优节点。
# dest-hash 策略组，随机负载均衡，但相同域名走固定节点。
# ssid 策略组，将根据你所设定的网络来自动切换节点/策略组
;img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
;direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)

[policy]

## 策略组
## 将分流规则传递过来的网络请求进行分发

# 服务器按地区分组策略 手动选择节点
# 实验
static=TEST, server-tag-regex=实验|试验|0.2, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/RS.png
# 香港
static=HK, server-tag-regex=HK|香港|港|🇭🇰️|Hong|Kong, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/HK.png
# 新加坡
static=SG, server-tag-regex=狮城|新加坡|🇸🇬|SG|Singapore, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/SG.png
# 澳大利亚
static=AU, server-tag-regex=AU|Australia|澳大利亚, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/AU.png
# 韩国
static=KR, server-tag-regex=KR|韩国|韩|Korea, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/KR.png
# 日本
static=JP, server-tag-regex=日|日本|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|JP|Japan, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/JP.png
# 美国
static=US, server-tag-regex=美|美国|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇺🇸|US|us|USA, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/US.png
# 台湾
static=TW, server-tag-regex=台|台湾|TW|Tai|Taiwan, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/TW.png
# 德国
static=DE, server-tag-regex=德|德国|DE|Deutschland, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/DE.png
# 英国
static=UK, server-tag-regex=UK|英国|King, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/UK.png
# 法国
static=FR, server-tag-regex=FR|法国|France, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/FR.png
# 荷兰
static=NL, server-tag-regex=NL|荷兰|Holland, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/AR.png
# 其他
static=other, server-tag-regex=IN|印度|India|加拿大|CA|Canada|西班牙|ES|俄罗斯|RU|乌克兰|UA|土耳其|TR|挪威|NO|瑞士|CH|瑞典|SE|爱尔兰|阿根廷|巴西|泰国|越南|埃及|菲律宾|马来西亚|巴基斯坦, img-url=https://raw.githubusercontent.com/panshuaijun/QuantumultX/main/icon/Policy-Country/US.png


# Global策略/GlobalMedia策略
static=Global, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Outside.png

# 国外媒体细分策略
# > Netflix策略
static=Netflix, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png
# > Disney策略
static=Disney, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Disney+.png
# > Spotify策略
static=Spotify, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Spotify.png

# 国内媒体细分策略
# > BiliBili策略
static=BiliBili, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Bilibili.png
# > Weibo策略
static=Weibo, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Weibo.png

# 软件&服务策略
# > Telegram策略
static=Telegram, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Telegram.png
# > Twitter策略
static=Twitter, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Twitter.png
# > Apple策略
static=Apple, TEST, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Apple.png
# > Google策略
static=Google, TEST, YouTube, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Google.png
# > HBO策略
static=HBO, TEST, YouTube, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/HBO.png
# > Microsoft策略
static=Microsoft, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png
# > OneDrive策略
static=OneDrive, Microsoft, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png

# Advertising策略-去广告
static=Advertising, reject, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/AdBlock.png

# China策略-国内访问
static=China, TEST, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Mainland.png

# FINAL策略：如果以上的策略均未被匹配到，则听从此策略组的规定
static=Final, TEST, HK, SG, AU, KR, JP, US, TW, DE, UK, FR, NL, direct, other, proxy, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Final01.png
;static=🕹 终极清单,direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
#server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组
#具体可参见教程部分: https://shrtm.nu/DAFP


# "tag" 跟 "enabled" 为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭.
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

#服务器远程订阅
[server_remote]
#远程服务器订阅模块，可直接订阅SSR，SS链接，以及Quantumult X格式的vmess/trojan/https订阅
#其它格式可用 opt-parser 参数开启解析器导入使用
#img-url参数用于指定图标，格式要求同样为 108*108 的 png 图片，可远程，可本地

#支持本地/iCloud的节点文件/片段，位于Quantumult X/Profiles路径下
;servers.snippet, tag=本地服务器, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, enabled=false

#规则分流远程订阅
[filter_remote]
## 远程分流规则订阅
## 将网络请求进行分流，网络请求的走向(是否能成功访问)由匹配到的策略组决定
# 部分规则有先后顺序要求，调整顺序可能失效
#远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组
;同样的
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

# 去广告，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Advertising/Advertising.list, tag=🚦去广告, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# 运营商劫持，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Hijacking/Hijacking.list, tag=🚫 运营商劫持, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# 隐私保护，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Privacy/Privacy.list, tag=🚫 隐私保护, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# 知乎广告拦截，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ZhihuAds/ZhihuAds.list, tag=🚫 知乎广告拦截, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# AdGuardSDNSFilter，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/AdGuardSDNSFilter/AdGuardSDNSFilter.list, tag=🚫 AdGuardSDNSFilter, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# EasyPrivacy，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/EasyPrivacy/EasyPrivacy.list, tag=🚫 EasyPrivacy, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# BlockHttpDNS，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BlockHttpDNS/BlockHttpDNS.list, tag=🚫 BlockHttpDNS, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true


# 以下为复写需求配置
# 复写去广告(严格版)，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingLite/AdvertisingLite.list, tag=🚫 复写去广告(严格版), force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# AllInOne，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AllInOne/AllInOne.list, tag=🚫 AllInOne, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# 脚本去广告，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingScript/AdvertisingScript.list, tag=🚫 脚本去广告, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true
# BlockHttpDNS，强制映射Advertising
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/BlockHTTPDNS/BlockHTTPDNS.list, tag=🚫 BlockHTTPDNS, force-policy=Advertising, update-interval=86400, opt-parser=true, enabled=true




# 单应用个性化设置

# Netflix，映射Netflix
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Netflix/Netflix.list, tag=📺 Netflix, force-policy=Netflix, update-interval=172800, opt-parser=true, enabled=true
# Disney规则，映射Disney
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Disney/Disney.list, tag=📺 Disney, force-policy=Disney, update-interval=172800, opt-parser=true, enabled=true


# Google规则，映射Google
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Google/Google.list, tag=Google规则, force-policy=Google, update-interval=86400, opt-parser=false, enabled=true
# YouTube，映射Google
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTube/YouTube.list, tag=🎬 YouTube, force-policy=Google, update-interval=86400, opt-parser=false, enabled=true
# YouTubemusic，映射Google
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTubeMusic/YouTubeMusic.list, tag=🎬 YouTubemusic, force-policy=Google, update-interval=86400, opt-parser=false, enabled=true


# Apple服务，映射Apple
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag= Apple服务, force-policy=Apple, update-interval=86400, opt-parser=false, enabled=true

# Telegram规则，映射Telegram
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list, tag=Telegram 规则, force-policy=Telegram, update-interval=86400, opt-parser=false, enabled=true

# Microsoft规则，映射Microsoft
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Microsoft/Microsoft.list, tag=Microsoft 规则, force-policy=Microsoft, update-interval=86400, opt-parser=false, enabled=true
# OneDrive规则，映射OneDrive
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/OneDrive/OneDrive.list, tag=OneDrive 规则, force-policy=OneDrive, update-interval=86400, opt-parser=false, enabled=true

# Twitter规则，映射Twitter
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Twitter/Twitter.list, tag=Twitter规则, force-policy=Twitter, update-interval=86400, opt-parser=false, enabled=true

# BiliBili规则，映射BiliBili
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BiliBili/BiliBili.list, tag=Bilibili 规则, force-policy=BiliBili, update-interval=172800, opt-parser=false, enabled=true
# Weibo规则，映射Weibo
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Weibo/Weibo.list, tag=Weibo 规则, force-policy=Weibo, update-interval=86400, opt-parser=false, enabled=true

# HBO规则，映射HBO
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/HBO/HBO.list, tag=HBO 规则, force-policy=HBO, update-interval=172800, opt-parser=true, enabled=true
# Spotify规则，映射Spotify
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Spotify/Spotify.list, tag=Spotify 规则, force-policy=Spotify, update-interval=86400, opt-parser=false, enabled=true


# 多应用全面设置

# China国内规则，映射China
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/China/China.list, tag=Mainland 规则, force-policy=China, update-interval=86400, opt-parser=false, enabled=true
# China国内规则，映射China
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaTest/ChinaTest.list, tag=ChinaTest 规则, force-policy=China, update-interval=86400, opt-parser=false, enabled=true
# 国内IP池，映射China
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaIPs/ChinaIPs.list, tag=🇨🇳️ 国内IP池, force-policy=China, update-interval=86400, opt-parser=false, enabled=true
# 国内视频，映射China
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMedia/ChinaMedia.list, tag=📽 国内视频, force-policy=China, update-interval=86400, opt-parser=false, enabled=true


# Global规则，映射Global
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, tag=Global 规则, force-policy=Global, update-interval=86400, opt-parser=false, enabled=true
# GlobalMedia规则，映射Global
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list, tag=GlobalMedia 规则, force-policy=Global, update-interval=86400, opt-parser=false, enabled=true
# GlobalScholar规则，映射Global
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalScholar/GlobalScholar.list, tag=GlobalScholar 规则, force-policy=Global, update-interval=86400, opt-parser=false, enabled=true


#支持本地/iCloud规则文件，位于Quantumult X/Profiles路径下
;filter.txt, tag=本地分流, enabled=false

#rewrite 复写远程订阅
[rewrite_remote]
#远程复写模块，内包含主机名hostname以及复写rewrite规则
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;


https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingLite/AdvertisingLite.conf, tag=⛔️ 复写去广告(严格版), update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AllInOne/AllInOne.conf, tag=⛔️ AllInOne, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingScript/AdvertisingScript.conf, tag=⛔️ 脚本去广告, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/BlockHTTPDNS/BlockHTTPDNS.conf, tag=⛔️ BlockHTTPDNS, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/GetCookie/GetCookie.conf, tag=获取签到脚本Cookie, update-interval=86400, opt-parser=false, enabled=true


# 远程重写订阅
# 包含主机名 hostname 以及复写 rewrite 规则
# update-interval 为更新时间参数，单位：秒, 默认更新时间为：24*60*60=86400 秒，也就是24小时
# opt-parser=true/false 用于控制是否对订阅开启资源解析器，不写或者 false 表示不启用解析器
https://raw.githubusercontent.com/erdongchanyo/Rules/main/Quantumult%20X/AllinOneRewrite/edc.conf, tag=EDC-AllinOne, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/module/youtube-qx.conf, tag=Youtube首页瀑布流去广告, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/Redirect/Redirect.conf, tag=Redirect, update-interval=172800, opt-parser=false, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rewrite/QuantumultX/Advertising/Advertising.conf, tag=Advertising, update-interval=86400, opt-parser=false, enabled=true



https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJS, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/Neurogram-R/Quantumult-X/main/snippet/Dualsub.snippet, tag=Dualsub, update-interval=172800, opt-parser=false, enabled=true
#支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
;rewrite.txt, tag=本地复写, opt-parser=false, enabled=false

# 本地服务器部分
[server_local]
# 以下示范都是 ip(域名):端口，
# 比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777
# 前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型
# 实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
# 目前支持 shadowsocks/shadowsocksR/Vmess/Trojan/http(s)/Socks5 等类型
# 支持 tls-cert-sha256 以及 tls-pubkey-sha256 参数等自定义TLS验证

#shadowsocks以及shadowsocksR类型, 支持 V2-Plugin
#支持UDP，支持UDP-OVER-TCP（版本1.0.29 665+）
;shadowsocks=ss-a.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=Sample-A
;shadowsocks=ss-b.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=Sample-B
;shadowsocks=ss-c.example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=Sample-C
;shadowsocks=ssr-a.example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=Sample-D
;shadowsocks=ws-a.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-E
;shadowsocks=ws-b.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=Sample-F
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-G
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, udp-over-tcp=true fast-open=false, udp-relay=false, tag=Sample-H

# vmess 类型，ws，wss(ws+tls),over-tls,tcp，支持 UDP
# vmess 类型节点默认开启 aead，关闭请用 aead=false
; ws 类型
;vmess=ws-c.example.com:80, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-c.example.com, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, aead=false, tag=Sample-H
; wss(ws+tls) 类型
;vmess=ws-tls-b.example.com:443, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-tls-b.example.com, obfs=wss, obfs-uri=/ws, tls-verification=true,fast-open=false, udp-relay=false, tag=Sample-I
; http 类型
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
; tcp 类型
;vmess=vmess-a.example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-J
;vmess=vmess-b.example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-K
; over-tls 类型
;vmess=vmess-over-tls.example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=vmess-over-tls.example.com, obfs=over-tls, tls-verification=true, fast-open=false, udp-relay=false, tag=Sample-L

; http(s) 类型
;http=http.example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http
;http=https.example.com:443, username=name, password=pwd, over-tls=true, tls-verification=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls

# socks5 类型节点
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02

; trojan 类型, 支持 over-tls 以及 websockets，支持 UDP
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=true, tag=trojan-tls-01
;trojan=example1.com:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05


#本地分流规则(对于完全相同的某条规则，本地的将优先生效)
[filter_local]
// 如开启其他设置中的  “分流匹配优化” 选项，则匹配优先级为👇

// host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agennt

// 完整域名匹配
;host, www.google.com, proxy
// 域名关键词匹配
;host-keyword, adsite, reject
// 域名后缀匹配
;host-suffix, googleapis.com, proxy
// 域名通配符匹配
;host-wildcard, *abc.com, proxy

// User-Agent 匹配
;user-agent, ?abc*, proxy


//强制分流走蜂窝网络
;host-suffix, googleapis.com, proxy, force-cellular
//让分流走蜂窝网络跟 Wi-Fi 中的优选结果
;host-suffix, googleapis.com, proxy, multi-interface
//让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
;host-suffix, googleapis.com, proxy, multi-interface-balance
//指定分流走特定网络接口
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

// %TUN% 参数，回传给 Quantumult X 接口，可用于曲线实现代理链功能
;host-suffix, example.com, ServerA, via-interface=%TUN%
;ip-cidr, ServerA's IP Range, ServerB

// ip 规则
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
//ipv6 规则
;ip6-cidr, 2001:4860:4860::8888/32, direct
# 已采用 ip 池数据，因此注释掉 geoip cn
;geoip, cn, direct

# 1.0.28 build628 后支持如下的geoip库写法（需 GEO-IP 库支持）
;geoip, netflix, proxy

#不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 🕹 终极清单, 请根据自己的需求来选择直连或节点、策略
#此为必需规则，仅可修改对应策略组，请勿删除 final
final, Final


#本地复写规则
[rewrite_local]

#以下为证书&主机名部分
[mitm]
;以下模块去掉;才生效
;请自行在 APP 的UI中 生成证书 并安装&信任（💡请按确保照文字提示操作💡）
;skip_validating_cert = false
;force_sni_domain_name = false

//当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
;skip_src_ip = 192.168.4.50, 92.168.4.51

// 当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
;skip_dst_ip = 123.44.55.4

;hostname 为主机名，用,分隔多个
;hostname = *.example.com, *.sample.com

//以下为证书参数，可去UI界面自行生成并安装证书，会在此生成对应信息
;passphrase = 
;p12 = 

